// WinUI3 Terminal Patch
#pragma once
// END Patch

// THIS FILE IS AUTOMATICALLY GENERATED; DO NOT EDIT IT
// INPUT FILE: D:\Projects\terminal\src\features.xml
#define TIL_FEATURE_ADJUSTINDISTINGUISHABLETEXT_ENABLED 1
#define TIL_FEATURE_ATLASENGINEPRESENTFALLBACK_ENABLED 0
#define TIL_FEATURE_ATTEMPTHANDOFF_ENABLED 0
#define TIL_FEATURE_AZURECONNECTIONINPROC_ENABLED 1
#define TIL_FEATURE_CONHOSTATLASENGINE_ENABLED 1
#define TIL_FEATURE_DEBUGMODEUI_ENABLED 1
#define TIL_FEATURE_DYNAMICSSHPROFILES_ENABLED 0
#define TIL_FEATURE_EDITABLEUNFOCUSEDAPPEARANCE_ENABLED 1
#define TIL_FEATURE_KEYPADMODEENABLED_ENABLED 1
#define TIL_FEATURE_LEGACYCONHOST_ENABLED 0
#define TIL_FEATURE_MARKDOWNPANE_ENABLED 1
#define TIL_FEATURE_NEARBYFONTLOADING_ENABLED 1
#define TIL_FEATURE_QUICKFIX_ENABLED 1
#define TIL_FEATURE_RECEIVEINCOMINGHANDOFF_ENABLED 1
#define TIL_FEATURE_SAVESNIPPET_ENABLED 1
#define TIL_FEATURE_SCRATCHPADPANE_ENABLED 1
#define TIL_FEATURE_SCROLLBARMARKS_ENABLED 1
#define TIL_FEATURE_SHELLCOMPLETIONS_ENABLED 1
#define TIL_FEATURE_USENUMPADEVENTSFORCLIPBOARDINPUT_ENABLED 0
#define TIL_FEATURE_VTCHECKSUMREPORT_ENABLED 1
#if defined(__cplusplus)
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_ADJUSTINDISTINGUISHABLETEXT_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_AdjustIndistinguishableText
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_ADJUSTINDISTINGUISHABLETEXT_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_ATLASENGINEPRESENTFALLBACK_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_AtlasEnginePresentFallback
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_ATLASENGINEPRESENTFALLBACK_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_ATTEMPTHANDOFF_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_AttemptHandoff
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_ATTEMPTHANDOFF_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_AZURECONNECTIONINPROC_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_AzureConnectionInProc
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_AZURECONNECTIONINPROC_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_CONHOSTATLASENGINE_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_ConhostAtlasEngine
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_CONHOSTATLASENGINE_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_DEBUGMODEUI_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_DebugModeUI
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_DEBUGMODEUI_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_DYNAMICSSHPROFILES_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_DynamicSSHProfiles
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_DYNAMICSSHPROFILES_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_EDITABLEUNFOCUSEDAPPEARANCE_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_EditableUnfocusedAppearance
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_EDITABLEUNFOCUSEDAPPEARANCE_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_KEYPADMODEENABLED_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_KeypadModeEnabled
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_KEYPADMODEENABLED_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_LEGACYCONHOST_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_LegacyConhost
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_LEGACYCONHOST_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_MARKDOWNPANE_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_MarkdownPane
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_MARKDOWNPANE_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_NEARBYFONTLOADING_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_NearbyFontLoading
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_NEARBYFONTLOADING_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_QUICKFIX_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_QuickFix
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_QUICKFIX_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_RECEIVEINCOMINGHANDOFF_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_ReceiveIncomingHandoff
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_RECEIVEINCOMINGHANDOFF_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_SAVESNIPPET_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_SaveSnippet
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_SAVESNIPPET_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_SCRATCHPADPANE_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_ScratchpadPane
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_SCRATCHPADPANE_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_SCROLLBARMARKS_ENABLED_mismatch", "AlwaysEnabled"))
struct Feature_ScrollbarMarks
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_SCROLLBARMARKS_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_SHELLCOMPLETIONS_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_ShellCompletions
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_SHELLCOMPLETIONS_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_USENUMPADEVENTSFORCLIPBOARDINPUT_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_UseNumpadEventsForClipboardInput
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_USENUMPADEVENTSFORCLIPBOARDINPUT_ENABLED == 1; }
};
__pragma(detect_mismatch("ODR_violation_TIL_FEATURE_VTCHECKSUMREPORT_ENABLED_mismatch", "AlwaysDisabled"))
struct Feature_VtChecksumReport
{
    static constexpr bool IsEnabled() { return TIL_FEATURE_VTCHECKSUMREPORT_ENABLED == 1; }
};
#endif
